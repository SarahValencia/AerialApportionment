% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/census_buffer_function.R
\name{CensusBuffer}
\alias{CensusBuffer}
\title{CensusBuffer}
\usage{
CensusBuffer(
  buffer_vec,
  census_dat_proj,
  FacilityLocation_m,
  runTract = FALSE,
  tract_dat_proj = NULL,
  runCounty = FALSE,
  county_dat_proj = NULL,
  variableNames = NULL,
  PopVariable = NULL,
  EmissionData = NULL,
  saveAs = "DemographicsNearTRIFacilities"
)
}
\arguments{
\item{buffer_vec}{A radial distance for a concentric buffer to be drawn around a point location in meters, or a vector of radial distances.}

\item{census_dat_proj}{A spatial dataframe (sf object) of ACS data at the block group level, projected into a metric coordinate system. This should be the output of the PullCensusData function with a geography of "block group".}

\item{FacilityLocation_m}{A spatial dataframe (sf object) of TRI facilities. This should be the output of the RSEISearch function, with returnLocation set to TRUE.}

\item{runTract}{Logical. If true, adds tract level summaries for demographic variables for comparison. The user must supply ACS data summarized at the tract level. Defaults to False.}

\item{tract_dat_proj}{A spatial dataframe (sf object) of ACS data at the tract level, projected into a metric coordinate system. This should be the output of the PullCensusData function with a geography of "tract".}

\item{runCounty}{Logical. If true, adds county level summaries for demographic variables for comparison. The user must supply ACS data summarized at the county level. Defaults to False.}

\item{county_dat_proj}{= A spatial dataframe (sf object) of ACS data at the countylevel, projected into a metric coordinate system. This should be the output of the PullCensusData function with a geography of "county".}

\item{variableNames}{A vector of variable names specifying the variables pulled in the PullCensusData function. These are the column names for the variables in the}

\item{PopVariable}{A logical vector the length of variableNames specifying which variables are population variables (1) and which are other types of variables (0). This lets the function know which variables should be multiplied by the proportion of block group area in each buffer, and which should be summarized using the mean value for the block group.}

\item{EmissionData}{An optional dataframe of emissions/RSEI score information if the user would like this merged into the demographic tabulation results. This should be the output of the RSEISearch function.}

\item{saveAs}{A character string specifying the name you would like the output file saved under. Defaults to "DemographicsNearTRIFacilities".}
}
\value{
A wide format dataframe. If EmissionsData are included, these data are merged into the final output so that each row is a chemical-facility combination, and the columns include the summed emissions and associated scores as well as the demography in each buffer. If EmissionsData is not included, the output of this function is a wide format dataframe with a row for each facility and in the columns the tabulated ACS variables within each buffer distance of that facility location. If runTract or runCounty are true, it also includes the county or tract totals for each variable for comparison. Counts of the number of TRI facilities within the buffer/tract/county are also included.
}
\description{
Function to overlay point locations on ACS data at the block group level, draw concentric polygons (buffers) around point locations at user specified radial distance, and apportion block group populations to each buffer based on the percentage of spatial overlap.
}
\details{
This function is specifically designed to apportion ACS population data at the block group level to nearby TRI facilities in order to calculate the demography within a certain distance of those facilties.  It relies on spatial functions in the sf package to take the outputs of the PullCensusData function (ACS data at the block group level, projected into a metric coordinate system) and the RSEISearch function (TRI Facility location data along with associated attributes, including emmissions) to determine the community attributes within a user specified distance of those facilities. Users can enter a vector of buffers (distance in meters) to do multiple calculations at once. For each radial distance provided, the data are intersected to determine the the proportion of each block groups that intersects the circular buffer. The population variables are then multiplied by that proportion to determine the number of people that are within the buffer, and this is summed for all the block groups that intersect each buffer to give a total population the buffer. This assumes that populations are distributed uniformly across block groups, which is incorrect but in the absence of finer scale distribution data provides a best estimate for the number of people that live within a given distance of each TRI facility.

This function is designed to be used with the output of the PullCensusData function, which pulls ACS data at desired geographical units, and the RSEISearch function, which produces a spatial dataframe of TRI reporting facilities as well as a dataframe of emissions data and RSEI scores for each chemical-facility combination.
}
