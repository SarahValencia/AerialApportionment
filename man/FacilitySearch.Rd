% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FacilitySearch.R
\name{FacilitySearch}
\alias{FacilitySearch}
\title{FacilitySearch}
\usage{
FacilitySearch(
  FacilityTab,
  facilityname = NULL,
  facilityID = NULL,
  NAICS = NULL,
  statesearch = NULL,
  countysearch = NULL,
  citysearch = NULL,
  zipsearch = NULL,
  AbbrevOutput = TRUE
)
}
\arguments{
\item{FacilityTab}{The Facility table downloaded from the publicly available RSEI database and stored as a dataframe.}

\item{facilityname}{Character string or vector of character strings specifying a name or partial name of a TRI facility. Capitalization does not matter.}

\item{facilityID}{Character string or vector of character strings specifying a TRI facility ID.}

\item{NAICS}{6 digit numeric string representing a North American Industry Classification System (NAICS) code, or a vector of NAICS codes. Numbers provided to the NAICS argument are matched with those found in the column "Modeled NAICS". According to the RSEI data dictionary, a facility can report multiple NAICS codes. If more than one primary NAICS is reported by the facility, the most frequently reported primary NAICS for the most recent year is selected for the column "NAICS1", and the "Modeled NAICS" column is based on the NAICS1 but is modified based on additional information as necessary.}

\item{statesearch}{A character string or vector of character strings representing 2 letter state or territory codes.}

\item{countysearch}{Character string or vector of character strings specifying a name or partial name of a county. Capitalization does not matter.}

\item{citysearch}{Character string or vector of character strings specifying a name or partial name of a city. Capitalization does not matter.}

\item{zipsearch}{5 digit numeric string, or a vector of 5 digit numeric strings, representing zip codes.}

\item{AbbrevOutput}{- Logical, defaults to TRUE. If abbreviated the function returns the Facility ID, Name, Street, City, County, State, ZipCode, ModeledNAICS, and the Lat/Lon, otherwise all columns in the RSEI Facility table are returned.}
}
\value{
Dataframe containing rows that match the search criteria provided. If all search terms are NULL, the original Facility dataframe is returned. Note that if there are no rows matching the argument(s) provided an empty dataframe is returned and a warning is provided.
}
\description{
This function allows users to search the Facility table of the RSEI database, which contains identifying information on facilities that have reported emissions via the Toxic Release Inventory (TRI) program. The unfiltered Facility table is provided as an input, and the table is filtered to return rows matching the search criteria provided in the arguments. There is an option to return all columns of the table or an abbreviated table with only columns containing the facility name and location information.
}
\details{
The Facility table provided to the function is filtered sequentially in the order the search terms are listed in the arguments section below. If a search term has no matches and yields an empty dataframe, searches with subsequent arguments are not completed. Instead, a warning is provided and an empty dataframe is returned.
}
\examples{
# If you are searching for a partial string, this returns facilities in the citys of Buena,
# Buena Vista, Buena Park, Aguas Buenas, and Lake Buena Vista.
# FacilitySearch(FacilityTab, citysearch = "buena")

# You can search for partial facility names
# FacilitySearch(FacilityTab = Facility, facilityname = c("chevron","monsanto")) 

# If you are searching for a city include the state for more accurate results.
# FacilitySearch(FacilityTab = Facility, citysearch = "oakland", statesearch= "NJ") 

}
