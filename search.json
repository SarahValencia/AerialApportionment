[{"path":"https://sarahvalencia.github.io/AerialApportionment/articles/LI_Facilities_Example.html","id":"obtaining-census-data","dir":"Articles","previous_headings":"","what":"Obtaining Census Data","title":"Using Aerial Apportionment to Assess Community Composition Near TRI Facilities: Long Island","text":"Say want look community characteristics areas near TRI reporting facilities Long Island. need obtain demographic data block group level. can using GetCensusData function. need determine spatial scale time frame census data need. decide interested recent 5 year American Community Survey dataset (ending 2021) “block group” geography four counties Long Island, like data projected NAD83 coordinate system (lat/lon degrees) WSG84 coordinate system meters (EPSG=4269). First need load tidycensus package set Census API key. can obtain census_api_key use census_api_key() function establish connection. create vector county names Finally, need determine variables interested . tidycensus package includes function load_variables, ACS collects information thousands different variables, variable codes consistent survey survey. reason, helpful use CensusVariableSearch function look specific variable codes. interested racial make communities near TRI facilities, well median income. search yields results, try just income search term. Now get 450 variables, scrolling can see term looking median household income. try term (note capitalization doesn’t matter, just copied pasted table). get much narrower set variables, scrolling see code B19013_001 corresponds median household income broken age. running function multiple times can assembled list variables like track, namely, number people race/ethnicity median household income. PullCensusData function can either call census variables directly codes, can create named vector variable names headings appear table informative user. now ready run function get ACS data now counts race, total population counts, median income block groups 4 counties, well geometry block group polygons projected metric coordinate system WGS 84. getACS function produces estimates (column name suffix E) measures error (column names suffix M). also want pull county level data Long Island comparison. can help us understand communities near TRI facilities different demographic makeups county whole. Note can also use census tract level data comparison.","code":"library(tidycensus) #census_api_key(\"paste your census API key here\", install=TRUE) LICounties <- c(\"Kings\", \"Queens\", \"Nassau\",\"Suffolk\") ACSVars <- load_variables(year=2021,dataset = \"acs5\",cache=T) str(ACSVars) RaceVars <- CensusVariableSearch(Yr=2021, dataset=\"acs5\", variableCode = NULL, geog_var = \"block group\", conceptSearch = c(\"race\"),labelSearch = \"Estimate!!Total:\")  IncomeVars <- CensusVariableSearch(Yr=2021, dataset=\"acs5\", variableCode = NULL, geog_var = \"block group\", conceptSearch = c(\"median income\")) IncomeVars <- CensusVariableSearch(Yr=2021, dataset=\"acs5\", variableCode = NULL, geog_var = \"block group\", conceptSearch  = c(\"income\")) IncomeVars <- CensusVariableSearch(Yr=2021, dataset=\"acs5\", variableCode = NULL, geog_var = \"block group\", conceptSearch  = c(\"MEDIAN HOUSEHOLD INCOME\")) my_vars <- c(   total_race = \"B02001_001\",   white_alone = \"B02001_002\",        black_alone = \"B02001_003\",   Amer_indian = \"B02001_004\",   Asian = \"B02001_005\",   Pacific_islander = \"B02001_006\",   Other_race = \"B02001_007\",   Two_or_more_races = \"B02001_008\",   hispanic_pop = \"B03003_003\",   median_income = \"B19013_001\" ) head(CensusLI_bg) head(Census_county_NY)"},{"path":"https://sarahvalencia.github.io/AerialApportionment/articles/LI_Facilities_Example.html","id":"downloading-risk-screening-environmental-indicators-rsei-data","dir":"Articles","previous_headings":"","what":"Downloading Risk Screening Environmental Indicators (RSEI) Data","title":"Using Aerial Apportionment to Assess Community Composition Near TRI Facilities: Long Island","text":"Next want obtain locations facilities reporting emissions Toxic Release Inventory (TRI) program 4 counties described, well types chemicals released hazard scores. can get publicly available RSEI data. two ways access data. First, like store data locally future use since download can time consuming, use GetRSEI function download store recent data folder choosing. can done following code: 5 RSEI tables returned list: 1. Facility - contains information facility part TRI program. 2. Chemicals - list chemicals tracked TRI program. 3. Submissions - contains Form R information submitted TRI, including year submission. 4. Elements - contains calculated results release. can multiple elements records release. 5. Releases - contains data chemical release. can multiple release records per submission record. Note code, 5 RSEI tables downloaded returned list assigned global environment, also saved directory provided savetodisk TRUE. allows users access files locally future operations. download times completed, seconds argument can extended provide time slow download.","code":"myworkingdirectory <- getwd() DataList <- GetRSEIData(rseiversion = \"v2311\", savetodisk = T, directory = myworkingdirectory, seconds=500)"},{"path":"https://sarahvalencia.github.io/AerialApportionment/articles/LI_Facilities_Example.html","id":"searching-the-rsei-database","dir":"Articles","previous_headings":"","what":"Searching the RSEI Database","title":"Using Aerial Apportionment to Assess Community Composition Near TRI Facilities: Long Island","text":"Users can search RSEI files obtain data chemical releases per facility per year using RSEISearchFunction. data stored locally, RSEISearchFunction can access files provided saved names downloaded . Alternatively, possible download data directly part RSEISearchFunction selecting DownloadRSEI = TRUE choosing version data obtain (“v2311” “v2310”). RSEISearchFunction flexible, lots optional arguments allows users narrow data location, time period, industry sector, facilities interested . , interested facilities 5 years 2017 2021 (recent year data), four counties Long Island. want project facility locations metric WGS 84 coordinate system can overlay facility locations census block data. can save 2 objects list dataframes. first contains data, including emissions data hazard scores, second contains locational data. can also check coordinate system","code":"LIFacilities <- RSEISearch(DownloadRSEI= FALSE,RSEIpath = paste(getwd(),\"RSEI_Public_Release_Data_V2311_RY2021\",sep=\"/\"), RSEIversion=\"v2311\", StartYr=2017, EndYr=2021, State = \"NY\", County = LICounties, returnLocation = T, projectTo = 3857, wider=TRUE) LIFacilitiesEmissions <- LIFacilities[[1]] glimpse(LIFacilitiesEmissions) LI_Facility_locations <- LIFacilities[[2]] glimpse(LI_Facility_locations) print(st_crs(LI_Facility_locations))"},{"path":"https://sarahvalencia.github.io/AerialApportionment/articles/LI_Facilities_Example.html","id":"facility-or-chem-searches","dir":"Articles","previous_headings":"","what":"Facility or Chem searches","title":"Using Aerial Apportionment to Assess Community Composition Near TRI Facilities: Long Island","text":"example looking TRI Facilities Long Island, also refine search facility name location, industry, chemical. two functions, FacilitySearch ChemSearch, RSEISearch function relies filter Facility Chemical tables. functions can used directly narrow particular information stored files. Say interested locations facilities store crude petroleum bult (NAICS code 424710). read Facility table, run FacilitySearch function find facilities NAICS code.17 different facilities returned. also look facilities release lead. first use ChemicalSearch function look lead categorized RSEI emmissions data. ChemSearch function match whole partial chemical names, capitalization matter. row includes search term name returned. see two ways lead can reported, lead lead compounds, different Chemical Number RSEI database. want see locations total emissions/hazard scores facilities released lead last 5 years, pass RSEISearch function either vector Chemical Numbers 346 347, just include search term “lead” argument ChemicalNames.","code":"LIPetroFacilities <- FacilitySearch(Facility, NAICS=c(424710),  statesearch = \"NY\", countysearch = LICounties, AbbrevOutput = TRUE) print(LIPetroFacilities) Lead <- ChemSearch(Chems,chemnamesearch = \"lead\", AbbrevOutput = TRUE) print(Lead) LIleadSearch_1 <- RSEISearch(DownloadRSEI= FALSE, RSEIpath = paste(getwd(),\"RSEI_Public_Release_Data_V2311_RY2021\",sep=\"/\"), RSEIversion=\"v2311\", StartYr=2017, EndYr=2021, State = \"NY\", County = LICounties, rsei_Chem_Numbers  = c(346,347)) glimpse(LIleadSearch_1)"},{"path":"https://sarahvalencia.github.io/AerialApportionment/articles/LI_Facilities_Example.html","id":"calculating-community-characteristics-via-aerial-apportionment-method","dir":"Articles","previous_headings":"","what":"Calculating Community Characteristics via Aerial Apportionment Method","title":"Using Aerial Apportionment to Assess Community Composition Near TRI Facilities: Long Island","text":"want overlay facility emissions data block group level demographic data determine make communities within 1km, 5km, 10km TRI reporting facility. want compare communities county whole determine communities near TRI facilities likely non-white lower median income. can use CensusBuffer function. provide vector radii buffers meters, object projected block group data, RSEI facility location information, spatial dataframe (sf object) contains facility locations projected WGS 84 coordinate system. setting runTract false runCounty true like compare demographics total estimates 4 LI counties, provide projected county ACS data. also need provide vector ACS variables names. Finally, option provide rsei emissions dataframe. included, data merged final output row chemical-facility combination, columns include summed emissions associated scores well demography buffer. provided, output function wide format dataframe row facility columns tabulated ACS variables within buffer distance facility location. runTract runCounty true, also includes county tract totals variable comparison. output final function large table contains ton information, including: Information chemical released, including name, total emmissions per year, associated RSEI scores Information facility released chemical, including name, location, TRIFID number. Information demographic composition near facility (case, within 1, 5, 10km). tracked population different races well median income, vary depending census variables tracked. Information demographic make census tract county facility located, comparative purposes.","code":"FinalLIDemos <- CensusBuffer(buffer_vec = c(1000,5000,10000), census_dat_proj= CensusLI_bg, FacilityLocation_m = LI_Facility_locations, runTract = FALSE, tract_dat_proj = NULL, runCounty = TRUE, county_dat_proj = Census_county_NY, variableNames = my_vars, EmissionData = LIFacilitiesEmissions) datatable(FinalLIDemos, rownames=FALSE, filter=\"top\", class = 'cell-border stripe')"},{"path":"https://sarahvalencia.github.io/AerialApportionment/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sarah Valencia. Author, maintainer. Mary Collins. Contributor.            Associate Professor, Stonybrook University Environmental Defense Fund. Funder.","code":""},{"path":"https://sarahvalencia.github.io/AerialApportionment/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Valencia S (2023). AerialApportionment: Aerial apportionment population data polluting facilities. R package version 1.0.0, https://sarahvalencia.github.io/AerialApportionment/.","code":"@Manual{,   title = {AerialApportionment: Aerial apportionment of population data to polluting facilities},   author = {Sarah Valencia},   year = {2023},   note = {R package version 1.0.0},   url = {https://sarahvalencia.github.io/AerialApportionment/}, }"},{"path":"https://sarahvalencia.github.io/AerialApportionment/index.html","id":"aerial-apportionment-r-package---functions-for-assigning-populations-to-polluting-facilities","dir":"","previous_headings":"","what":"Aerial apportionment of population data to polluting facilities","title":"Aerial apportionment of population data to polluting facilities","text":"package developed help users assess characteristics communities live near facilities emit toxic chemicals, determine risks may face due proximity.","code":""},{"path":"https://sarahvalencia.github.io/AerialApportionment/index.html","id":"accessing-publicly-available-datasets","dir":"","previous_headings":"","what":"Accessing Publicly Available Datasets","title":"Aerial apportionment of population data to polluting facilities","text":"data necessary perform operations comes publicly available datasets. Emissions information sourced EPAs Risk Screening Environmental Indicators (RSEI) database, includes data federally managed Toxic Release Inventory (TRI) program 25,000 facilities reporting hazardous emissions since 1980s, well risk scores account size chemical release, fate transport chemical environment, size location exposed population, chemical’s toxicity. Population information comes American Community Survey (ACS) Census Block Group-level. package contains suite functions access organize data, perform spatial manipulations necessary determine demographics may impacted TRI facilities.","code":""},{"path":"https://sarahvalencia.github.io/AerialApportionment/index.html","id":"what-is-aerial-apportionment","dir":"","previous_headings":"","what":"What is Aerial Apportionment?","title":"Aerial apportionment of population data to polluting facilities","text":"Impacts calculated using method called aerial apportionment, circular polygons, buffers, drawn around facility overlaid census data block group level. population weighted proportion area block group captured circle. weighted populations units used determine aggregate demographic characteristics perfectly circular neighborhoods within buffer.","code":""},{"path":"https://sarahvalencia.github.io/AerialApportionment/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Aerial apportionment of population data to polluting facilities","text":"Please see vignette showing functions can used assess facilities reporting TRI emissions Long Island, community characteristics around facilities.","code":""},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/CensusBuffer.html","id":null,"dir":"Reference","previous_headings":"","what":"CensusBuffer — CensusBuffer","title":"CensusBuffer — CensusBuffer","text":"Function overlay point locations ACS data block group level, draw concentric polygons (buffers) around point locations user specified radial distance, apportion block group populations buffer based percentage spatial overlap.","code":""},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/CensusBuffer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CensusBuffer — CensusBuffer","text":"","code":"CensusBuffer(   buffer_vec,   census_dat_proj,   FacilityLocation_m,   runTract = FALSE,   tract_dat_proj = NULL,   runCounty = FALSE,   county_dat_proj = NULL,   variableNames = NULL,   PopVariable = NULL,   EmissionData = NULL,   saveAs = \"DemographicsNearTRIFacilities\" )"},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/CensusBuffer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CensusBuffer — CensusBuffer","text":"buffer_vec radial distance concentric buffer drawn around point location meters, vector radial distances. census_dat_proj spatial dataframe (sf object) ACS data block group level, projected metric coordinate system. output PullCensusData function geography \"block group\". FacilityLocation_m spatial dataframe (sf object) TRI facilities. output RSEISearch function, returnLocation set TRUE. runTract Logical. true, adds tract level summaries demographic variables comparison. user must supply ACS data summarized tract level. Defaults False. tract_dat_proj spatial dataframe (sf object) ACS data tract level, projected metric coordinate system. output PullCensusData function geography \"tract\". runCounty Logical. true, adds county level summaries demographic variables comparison. user must supply ACS data summarized county level. Defaults False. county_dat_proj = spatial dataframe (sf object) ACS data countylevel, projected metric coordinate system. output PullCensusData function geography \"county\". variableNames vector variable names specifying variables pulled PullCensusData function. column names variables PopVariable logical vector length variableNames specifying variables population variables (1) types variables (0). lets function know variables multiplied proportion block group area buffer, summarized using mean value block group. EmissionData optional dataframe emissions/RSEI score information user like merged demographic tabulation results. output RSEISearch function. saveAs character string specifying name like output file saved . Defaults \"DemographicsNearTRIFacilities\".","code":""},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/CensusBuffer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CensusBuffer — CensusBuffer","text":"wide format dataframe. EmissionsData included, data merged final output row chemical-facility combination, columns include summed emissions associated scores well demography buffer. EmissionsData included, output function wide format dataframe row facility columns tabulated ACS variables within buffer distance facility location. runTract runCounty true, also includes county tract totals variable comparison. Counts number TRI facilities within buffer/tract/county also included.","code":""},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/CensusBuffer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CensusBuffer — CensusBuffer","text":"function specifically designed apportion ACS population data block group level nearby TRI facilities order calculate demography within certain distance facilties.  relies spatial functions sf package take outputs PullCensusData function (ACS data block group level, projected metric coordinate system) RSEISearch function (TRI Facility location data along associated attributes, including emmissions) determine community attributes within user specified distance facilities. Users can enter vector buffers (distance meters) multiple calculations . radial distance provided, data intersected determine proportion block groups intersects circular buffer. population variables multiplied proportion determine number people within buffer, summed block groups intersect buffer give total population buffer. assumes populations distributed uniformly across block groups, incorrect absence finer scale distribution data provides best estimate number people live within given distance TRI facility. function designed used output PullCensusData function, pulls ACS data desired geographical units, RSEISearch function, produces spatial dataframe TRI reporting facilities well dataframe emissions data RSEI scores chemical-facility combination.","code":""},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/CensusVariableSearch.html","id":null,"dir":"Reference","previous_headings":"","what":"CensusVariableSearch — CensusVariableSearch","title":"CensusVariableSearch — CensusVariableSearch","text":"function allows users search variables narrowing available options provided tidyCensus load_variables function.","code":""},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/CensusVariableSearch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CensusVariableSearch — CensusVariableSearch","text":"","code":"CensusVariableSearch(   Yr,   dataset = \"acs5\",   variableCode = NULL,   geog_var = NULL,   conceptSearch = NULL,   labelSearch = NULL )"},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/CensusVariableSearch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CensusVariableSearch — CensusVariableSearch","text":"Yr end year survey pulling data . dataset Survey type, can \"acs5\", \"acs3\", \"acs1\". Defailts \"acs5\". variableCode Character string vector character strings can used search variable already know code. example, can check code used previous survey still valid. geog_var Optional string specifying geography variable searching , can help narrow results. conceptSearch Character string vector character strings representing word phrase found \"concept\" column variable table. Useful concept search terms include \"Total population\", \"Median Household Income\", \"Race\". labelSearch Character string vector character strings representing word phrase found \"label\" column variable table.","code":""},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/CensusVariableSearch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CensusVariableSearch — CensusVariableSearch","text":"four column tibble variables requested dataset, filtered search terms. matching search terms warning appear empty tibble appear.","code":""},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/CensusVariableSearch.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CensusVariableSearch — CensusVariableSearch","text":"load_variables function allows users select dataset year, provides additional means filtering thousands variables may present. function builds load_variables function provide users way filter variable table reduce number variables shown.","code":""},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/CensusVariableSearch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CensusVariableSearch — CensusVariableSearch","text":"","code":"CensusVariableSearch(Yr=2021, dataset=\"acs5\", geog_var = \"block group\", conceptSearch = \"Race\") #> # A tibble: 217 × 4 #>    name        label                                           concept geography #>    <chr>       <chr>                                           <chr>   <chr>     #>  1 B01002F_001 Estimate!!Median age --!!Total:                 MEDIAN… block gr… #>  2 B01002F_002 Estimate!!Median age --!!Male                   MEDIAN… block gr… #>  3 B01002F_003 Estimate!!Median age --!!Female                 MEDIAN… block gr… #>  4 B01002G_001 Estimate!!Median age --!!Total:                 MEDIAN… block gr… #>  5 B01002G_002 Estimate!!Median age --!!Male                   MEDIAN… block gr… #>  6 B01002G_003 Estimate!!Median age --!!Female                 MEDIAN… block gr… #>  7 B02001_001  Estimate!!Total:                                RACE    block gr… #>  8 B02001_002  Estimate!!Total:!!White alone                   RACE    block gr… #>  9 B02001_003  Estimate!!Total:!!Black or African American al… RACE    block gr… #> 10 B02001_004  Estimate!!Total:!!American Indian and Alaska N… RACE    block gr… #> # ℹ 207 more rows  CensusVariableSearch(Yr=2021, dataset=\"acs5\", variableCode = \"B02001_001\") #> # A tibble: 1 × 4 #>   name       label            concept geography   #>   <chr>      <chr>            <chr>   <chr>       #> 1 B02001_001 Estimate!!Total: RACE    block group  CensusVariableSearch(Yr=2021, dataset=\"acs5\", geog_var = \"block group\", conceptSearch = \"Education\") #> # A tibble: 119 × 4 #>    name       label                                            concept geography #>    <chr>      <chr>                                            <chr>   <chr>     #>  1 B14005_001 Estimate!!Total:                                 SEX BY… block gr… #>  2 B14005_002 Estimate!!Total:!!Male:                          SEX BY… block gr… #>  3 B14005_003 Estimate!!Total:!!Male:!!Enrolled in school:     SEX BY… block gr… #>  4 B14005_004 Estimate!!Total:!!Male:!!Enrolled in school:!!E… SEX BY… block gr… #>  5 B14005_005 Estimate!!Total:!!Male:!!Enrolled in school:!!U… SEX BY… block gr… #>  6 B14005_006 Estimate!!Total:!!Male:!!Enrolled in school:!!N… SEX BY… block gr… #>  7 B14005_007 Estimate!!Total:!!Male:!!Not enrolled in school: SEX BY… block gr… #>  8 B14005_008 Estimate!!Total:!!Male:!!Not enrolled in school… SEX BY… block gr… #>  9 B14005_009 Estimate!!Total:!!Male:!!Not enrolled in school… SEX BY… block gr… #> 10 B14005_010 Estimate!!Total:!!Male:!!Not enrolled in school… SEX BY… block gr… #> # ℹ 109 more rows"},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/ChemSearch.html","id":null,"dir":"Reference","previous_headings":"","what":"ChemSearch — ChemSearch","title":"ChemSearch — ChemSearch","text":"function allows users search RSEI Chemicals table  chemical names, CAS Numbers, RSEI Chemical numbers order obtain  information chemical.","code":""},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/ChemSearch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ChemSearch — ChemSearch","text":"","code":"ChemSearch(   ChemTab,   CASnumbersearch = NULL,   chemnamesearch = NULL,   rsei_chemnumber = NULL,   AbbrevOutput = TRUE )"},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/ChemSearch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ChemSearch — ChemSearch","text":"ChemTab Chemicals table downloaded publicly available RSEI  database stored dataframe. CASnumbersearch numerical string vector numerical strings representing  CAS Number. CAS Registry Number numeric identifier can contain  10 digits, separated hyphens. However hyphens, dashes, spaces  allowed, please collapse standard CAS number format digital string. chemnamesearch Character string vector character strings specifying  name partial name chemical. Capitalization matter. rsei_chemnumber number representing unique idenifyer RSEI  Chemicals table. Chemical Numbers range 1 almost 900 time. AbbrevOutput - Logical, defaults TRUE. abbreviated function returns  CASNumber, CAS Standard, ChemicalNumber, Chemical Name, FirstReportingYear,  ToxicityClassOral, ToxicityClassInhale,  ToxicityCategory. Otherwise columns  RSEI Chemicals table returned.","code":""},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/ChemSearch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ChemSearch — ChemSearch","text":"matching chemical names, statement \"matching chemical  names\" printed console. chemicals contain words match  search terms provided information chemicals printed console","code":""},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/ChemSearch.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ChemSearch — ChemSearch","text":"RSEI Chemicals tables contains information 800 different  chemicals. Users can search \"Chems\" table using single words rather  entire chemical names, can long. rows containing information  matching search term provided returned order let users easily  located specific RSEI database chemical numbers (unique identifier crosswalk  tables) use operations. Chemical table provided function filtered sequentially order  search terms listed arguments section (CASnumbersearch,  chemnamesearch, rsei_chemnumber). search term matches  yields empty dataframe, searches subsequent arguments completed.  Instead, warning provided empty dataframe returned.","code":""},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/ChemSearch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ChemSearch — ChemSearch","text":"","code":"# Read in the Chemical table and save as \"Chems\" to pass to function. # Chems <- read.csv(\"chemical_data_rsei_v2311.csv\")  # Search for three CAS numbers, one of which is incorrect. # ChemSearch(ChemTab = Chems, CASnumbersearch = c(79107,116063,0009))  # Search for all chemicals that contain the word \"Chloride\", and return an unabbreviated  # table. # ChemSearch(ChemTab = Chems, chemnamesearch = \"Chloride\", AbbrevOutput = F)  # Search for all chemicals that contain either word # ChemSearch(ChemTab = Chems, chemnamesearch = c(\"benzoyl\", \"benzyl\"))"},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/FacilitySearch.html","id":null,"dir":"Reference","previous_headings":"","what":"FacilitySearch — FacilitySearch","title":"FacilitySearch — FacilitySearch","text":"function allows users search Facility table RSEI database, contains identifying information facilities reported emissions via Toxic Release Inventory (TRI) program. unfiltered Facility table provided input, table filtered return rows matching search criteria provided arguments. option return columns table abbreviated table columns containing facility name location information.","code":""},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/FacilitySearch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FacilitySearch — FacilitySearch","text":"","code":"FacilitySearch(   FacilityTab,   facilityname = NULL,   facilityID = NULL,   NAICS = NULL,   statesearch = NULL,   countysearch = NULL,   citysearch = NULL,   zipsearch = NULL,   AbbrevOutput = TRUE )"},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/FacilitySearch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FacilitySearch — FacilitySearch","text":"FacilityTab Facility table downloaded publicly available RSEI database stored dataframe. facilityname Character string vector character strings specifying name partial name TRI facility. Capitalization matter. facilityID Character string vector character strings specifying TRI facility ID. NAICS 6 digit numeric string representing North American Industry Classification System (NAICS) code, vector NAICS codes. Numbers provided NAICS argument matched found column \"Modeled NAICS\". According RSEI data dictionary, facility can report multiple NAICS codes. one primary NAICS reported facility, frequently reported primary NAICS recent year selected column \"NAICS1\", \"Modeled NAICS\" column based NAICS1 modified based additional information necessary. statesearch character string vector character strings representing 2 letter state territory codes. countysearch Character string vector character strings specifying name partial name county. Capitalization matter. citysearch Character string vector character strings specifying name partial name city. Capitalization matter. zipsearch 5 digit numeric string, vector 5 digit numeric strings, representing zip codes. AbbrevOutput - Logical, defaults TRUE. abbreviated function returns Facility ID, Name, Street, City, County, State, ZipCode, ModeledNAICS, Lat/Lon, otherwise columns RSEI Facility table returned.","code":""},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/FacilitySearch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FacilitySearch — FacilitySearch","text":"Dataframe containing rows match search criteria provided. search terms NULL, original Facility dataframe returned. Note rows matching argument(s) provided empty dataframe returned warning provided.","code":""},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/FacilitySearch.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FacilitySearch — FacilitySearch","text":"Facility table provided function filtered sequentially order search terms listed arguments section . search term matches yields empty dataframe, searches subsequent arguments completed. Instead, warning provided empty dataframe returned.","code":""},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/FacilitySearch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FacilitySearch — FacilitySearch","text":"","code":"# If you are searching for a partial string, this returns facilities in the citys of Buena, # Buena Vista, Buena Park, Aguas Buenas, and Lake Buena Vista. # FacilitySearch(FacilityTab, citysearch = \"buena\")  # You can search for partial facility names # FacilitySearch(FacilityTab = Facility, facilityname = c(\"chevron\",\"monsanto\"))   # If you are searching for a city include the state for more accurate results. # FacilitySearch(FacilityTab = Facility, citysearch = \"oakland\", statesearch= \"NJ\")"},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/GetRSEIData.html","id":null,"dir":"Reference","previous_headings":"","what":"GetRSEIData — GetRSEIData","title":"GetRSEIData — GetRSEIData","text":"Function download save publicly available data EPA's Risk-Screening Environmental Indicators (RSEI) Model.","code":""},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/GetRSEIData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GetRSEIData — GetRSEIData","text":"","code":"GetRSEIData(   rseiversion = \"v2311\",   savetodisk = FALSE,   directory = NULL,   seconds = 500 )"},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/GetRSEIData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"GetRSEIData — GetRSEIData","text":"rseiversion Users can currently specify \"v2311\" (recent version RSEI data) \"v2310\" (last version). savetodisk Logical. TRUE, dataframes saved csv files folder directory provided. directory optional path specifying data saved. seconds number seconds download times . Defaults 500 can extended necessary.","code":""},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/GetRSEIData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"GetRSEIData — GetRSEIData","text":"list containing five RSEI tables. tables also assigned global environment use functions package, saved csv files savetodisk TRUE.","code":""},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/GetRSEIData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"GetRSEIData — GetRSEIData","text":"Five RSEI tables, including Facility, Chemicals, Submissions, Releases, Elements downloaded. See RSEI Data Dictionary information contained table.","code":""},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/GetRSEIData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"GetRSEIData — GetRSEIData","text":"","code":"if (FALSE) RSEIList <- GetRSEIData(rseiversion = \"v2311\", savetodisk = FALSE)"},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/PullCensusData.html","id":null,"dir":"Reference","previous_headings":"","what":"PullCensusData — PullCensusData","title":"PullCensusData — PullCensusData","text":"function allows users obtain data feature geometry american community survey (ACS) organize data use spatial buffering operations.","code":""},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/PullCensusData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PullCensusData — PullCensusData","text":"","code":"PullCensusData(   EndYr,   acsGeog = \"block group\",   stateList,   countyList = NULL,   variableCodes,   surveyType = \"acs5\",   EPSGcode = 4269 )"},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/PullCensusData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PullCensusData — PullCensusData","text":"EndYr year, endyear, ACS sample. 5-year ACS data available 2009 2021; 1-year ACS data available 2005 2021, exception 2020. Defaults 2021. acsGeog character string specifies one geography inputs get_acs function tidyCensus package (complete list : https://walker-data.com/tidycensus/articles/basic-usage.html) stateList vector character stings specifying 2 letter FIPS codes states. Data downloaded state state basis vector desired states territories must provided. countyList county requesting data. County names FIPS codes accepted. Must combined value supplied 'state'. Defaults NULL variableCodes Character string vector character strings variable IDs. tidycensus automatically returns estimate margin error associated variable. surveyType Specifies type survey data pulled . ACS contains one-year, three-year, five-year surveys expressed \"acs1\", \"acs3\", \"acs5\". default selection \"acs5.\" EPSGcode Users can provide EPSG code like data projected Lat/Long (NAD83) another coordinate system.","code":""},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/PullCensusData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PullCensusData — PullCensusData","text":"sf tibble ACS data. get_acs function can return data \"tidy\" format row represents enumeration unit-variable combination, PullCensusData function returns data \"wide\" format row represents enumeration unit variables columns. data also saved .rds file current working directory.","code":""},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/PullCensusData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"PullCensusData — PullCensusData","text":"function specifically designed organize census data order calculate number people different demographics live within specified range (buffer) TRI facilities. uses get_acs function tidycensus package, allows users access 1-year 5-year American Community Survey APIs. time frame, geographic scale, location specified user. Users also option project returned data different geographic coordinate systems.","code":""},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/PullCensusData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PullCensusData — PullCensusData","text":"","code":"# Set your api key using the command census_api_key(\"YOUR KEY GOES HERE\")  # before running PullCensusData.  PullCensusData(2020, acsGeog = \"block group\", stateList = \"CA\",  variableCodes=  c(\"population\" = \"B01001_001\"), surveyType=\"acs5\", EPSGcode=4269) #> Getting data from the 2016-2020 5-year ACS #> Warning: • You have not set a Census API key. Users without a key are limited to 500 #> queries per day and may experience performance limitations. #> ℹ For best results, get a Census API key at #> http://api.census.gov/data/key_signup.html and then supply the key to the #> `census_api_key()` function to use it throughout your tidycensus session. #> This warning is displayed once per session. #> Downloading feature geometry from the Census website.  To cache shapefiles for use in future sessions, set `options(tigris_use_cache = TRUE)`. #>  Downloading: 16 kB      Downloading: 16 kB      Downloading: 16 kB      Downloading: 16 kB      Downloading: 16 kB      Downloading: 16 kB      Downloading: 16 kB      Downloading: 16 kB      Downloading: 16 kB      Downloading: 16 kB      Downloading: 16 kB      Downloading: 16 kB      Downloading: 16 kB      Downloading: 16 kB      Downloading: 33 kB      Downloading: 33 kB      Downloading: 33 kB      Downloading: 33 kB      Downloading: 33 kB      Downloading: 33 kB      Downloading: 41 kB      Downloading: 41 kB      Downloading: 41 kB      Downloading: 41 kB      Downloading: 41 kB      Downloading: 41 kB      Downloading: 41 kB      Downloading: 41 kB      Downloading: 41 kB      Downloading: 41 kB      Downloading: 41 kB      Downloading: 41 kB      Downloading: 57 kB      Downloading: 57 kB      Downloading: 57 kB      Downloading: 57 kB      Downloading: 57 kB      Downloading: 57 kB      Downloading: 65 kB      Downloading: 65 kB      Downloading: 65 kB      Downloading: 65 kB      Downloading: 65 kB      Downloading: 65 kB      Downloading: 65 kB      Downloading: 65 kB      Downloading: 78 kB      Downloading: 78 kB      Downloading: 78 kB      Downloading: 78 kB      Downloading: 78 kB      Downloading: 78 kB      Downloading: 78 kB      Downloading: 78 kB      Downloading: 78 kB      Downloading: 78 kB      Downloading: 78 kB      Downloading: 78 kB      Downloading: 97 kB      Downloading: 97 kB      Downloading: 97 kB      Downloading: 97 kB      Downloading: 97 kB      Downloading: 97 kB      Downloading: 97 kB      Downloading: 97 kB      Downloading: 110 kB      Downloading: 110 kB      Downloading: 110 kB      Downloading: 110 kB      Downloading: 110 kB      Downloading: 110 kB      Downloading: 110 kB      Downloading: 110 kB      Downloading: 130 kB      Downloading: 130 kB      Downloading: 130 kB      Downloading: 130 kB      Downloading: 130 kB      Downloading: 130 kB      Downloading: 150 kB      Downloading: 150 kB      Downloading: 150 kB      Downloading: 150 kB      Downloading: 150 kB      Downloading: 150 kB      Downloading: 160 kB      Downloading: 160 kB      Downloading: 160 kB      Downloading: 160 kB      Downloading: 160 kB      Downloading: 160 kB      Downloading: 180 kB      Downloading: 180 kB      Downloading: 180 kB      Downloading: 180 kB      Downloading: 190 kB      Downloading: 190 kB      Downloading: 210 kB      Downloading: 210 kB      Downloading: 210 kB      Downloading: 210 kB      Downloading: 230 kB      Downloading: 230 kB      Downloading: 230 kB      Downloading: 230 kB      Downloading: 240 kB      Downloading: 240 kB      Downloading: 260 kB      Downloading: 260 kB      Downloading: 280 kB      Downloading: 280 kB      Downloading: 290 kB      Downloading: 290 kB      Downloading: 310 kB      Downloading: 310 kB      Downloading: 330 kB      Downloading: 330 kB      Downloading: 360 kB      Downloading: 360 kB      Downloading: 380 kB      Downloading: 380 kB      Downloading: 380 kB      Downloading: 380 kB      Downloading: 390 kB      Downloading: 390 kB      Downloading: 410 kB      Downloading: 410 kB      Downloading: 440 kB      Downloading: 440 kB      Downloading: 440 kB      Downloading: 440 kB      Downloading: 470 kB      Downloading: 470 kB      Downloading: 490 kB      Downloading: 490 kB      Downloading: 500 kB      Downloading: 500 kB      Downloading: 520 kB      Downloading: 520 kB      Downloading: 540 kB      Downloading: 540 kB      Downloading: 550 kB      Downloading: 550 kB      Downloading: 570 kB      Downloading: 570 kB      Downloading: 590 kB      Downloading: 590 kB      Downloading: 620 kB      Downloading: 620 kB      Downloading: 630 kB      Downloading: 630 kB      Downloading: 630 kB      Downloading: 630 kB      Downloading: 650 kB      Downloading: 650 kB      Downloading: 670 kB      Downloading: 670 kB      Downloading: 710 kB      Downloading: 710 kB      Downloading: 720 kB      Downloading: 720 kB      Downloading: 740 kB      Downloading: 740 kB      Downloading: 760 kB      Downloading: 760 kB      Downloading: 770 kB      Downloading: 770 kB      Downloading: 800 kB      Downloading: 800 kB      Downloading: 820 kB      Downloading: 820 kB      Downloading: 830 kB      Downloading: 830 kB      Downloading: 850 kB      Downloading: 850 kB      Downloading: 870 kB      Downloading: 870 kB      Downloading: 870 kB      Downloading: 870 kB      Downloading: 880 kB      Downloading: 880 kB      Downloading: 930 kB      Downloading: 930 kB      Downloading: 930 kB      Downloading: 930 kB      Downloading: 990 kB      Downloading: 990 kB      Downloading: 990 kB      Downloading: 990 kB      Downloading: 1 MB      Downloading: 1 MB      Downloading: 1 MB      Downloading: 1 MB      Downloading: 1.1 MB      Downloading: 1.1 MB      Downloading: 1.1 MB      Downloading: 1.1 MB      Downloading: 1.1 MB      Downloading: 1.1 MB      Downloading: 1.1 MB      Downloading: 1.1 MB      Downloading: 1.1 MB      Downloading: 1.1 MB      Downloading: 1.1 MB      Downloading: 1.1 MB      Downloading: 1.1 MB      Downloading: 1.1 MB      Downloading: 1.2 MB      Downloading: 1.2 MB      Downloading: 1.2 MB      Downloading: 1.2 MB      Downloading: 1.2 MB      Downloading: 1.2 MB      Downloading: 1.2 MB      Downloading: 1.2 MB      Downloading: 1.2 MB      Downloading: 1.2 MB      Downloading: 1.2 MB      Downloading: 1.2 MB      Downloading: 1.2 MB      Downloading: 1.2 MB      Downloading: 1.2 MB      Downloading: 1.2 MB      Downloading: 1.3 MB      Downloading: 1.3 MB      Downloading: 1.3 MB      Downloading: 1.3 MB      Downloading: 1.3 MB      Downloading: 1.3 MB      Downloading: 1.3 MB      Downloading: 1.3 MB      Downloading: 1.4 MB      Downloading: 1.4 MB      Downloading: 1.5 MB      Downloading: 1.5 MB      Downloading: 1.5 MB      Downloading: 1.5 MB      Downloading: 1.5 MB      Downloading: 1.5 MB      Downloading: 1.5 MB      Downloading: 1.5 MB      Downloading: 1.6 MB      Downloading: 1.6 MB      Downloading: 1.6 MB      Downloading: 1.6 MB      Downloading: 1.6 MB      Downloading: 1.6 MB      Downloading: 1.6 MB      Downloading: 1.6 MB      Downloading: 1.6 MB      Downloading: 1.6 MB      Downloading: 1.6 MB      Downloading: 1.6 MB      Downloading: 1.6 MB      Downloading: 1.6 MB      Downloading: 1.6 MB      Downloading: 1.6 MB      Downloading: 1.7 MB      Downloading: 1.7 MB      Downloading: 1.7 MB      Downloading: 1.7 MB      Downloading: 1.7 MB      Downloading: 1.7 MB      Downloading: 1.7 MB      Downloading: 1.7 MB      Downloading: 1.7 MB      Downloading: 1.7 MB      Downloading: 1.8 MB      Downloading: 1.8 MB      Downloading: 1.8 MB      Downloading: 1.8 MB      Downloading: 1.8 MB      Downloading: 1.8 MB      Downloading: 1.8 MB      Downloading: 1.8 MB      Downloading: 1.8 MB      Downloading: 1.8 MB      Downloading: 1.8 MB      Downloading: 1.8 MB      Downloading: 1.9 MB      Downloading: 1.9 MB      Downloading: 1.9 MB      Downloading: 1.9 MB      Downloading: 1.9 MB      Downloading: 1.9 MB      Downloading: 2 MB      Downloading: 2 MB      Downloading: 2 MB      Downloading: 2 MB      Downloading: 2 MB      Downloading: 2 MB      Downloading: 2 MB      Downloading: 2 MB      Downloading: 2 MB      Downloading: 2 MB      Downloading: 2.1 MB      Downloading: 2.1 MB      Downloading: 2.1 MB      Downloading: 2.1 MB      Downloading: 2.2 MB      Downloading: 2.2 MB      Downloading: 2.2 MB      Downloading: 2.2 MB      Downloading: 2.2 MB      Downloading: 2.2 MB      Downloading: 2.3 MB      Downloading: 2.3 MB      Downloading: 2.3 MB      Downloading: 2.3 MB      Downloading: 2.3 MB      Downloading: 2.3 MB      Downloading: 2.3 MB      Downloading: 2.3 MB      Downloading: 2.3 MB      Downloading: 2.3 MB      Downloading: 2.3 MB      Downloading: 2.3 MB      Downloading: 2.4 MB      Downloading: 2.4 MB      Downloading: 2.4 MB      Downloading: 2.4 MB      Downloading: 2.4 MB      Downloading: 2.4 MB      Downloading: 2.4 MB      Downloading: 2.4 MB      Downloading: 2.5 MB      Downloading: 2.5 MB      Downloading: 2.5 MB      Downloading: 2.5 MB      Downloading: 2.5 MB      Downloading: 2.5 MB      Downloading: 2.6 MB      Downloading: 2.6 MB      Downloading: 2.6 MB      Downloading: 2.6 MB      Downloading: 2.7 MB      Downloading: 2.7 MB      Downloading: 2.7 MB      Downloading: 2.7 MB      Downloading: 2.7 MB      Downloading: 2.7 MB      Downloading: 2.7 MB      Downloading: 2.7 MB      Downloading: 2.7 MB      Downloading: 2.7 MB      Downloading: 2.7 MB      Downloading: 2.7 MB      Downloading: 2.8 MB      Downloading: 2.8 MB      Downloading: 2.8 MB      Downloading: 2.8 MB      Downloading: 2.8 MB      Downloading: 2.8 MB      Downloading: 2.9 MB      Downloading: 2.9 MB      Downloading: 2.9 MB      Downloading: 2.9 MB      Downloading: 2.9 MB      Downloading: 2.9 MB      Downloading: 2.9 MB      Downloading: 2.9 MB      Downloading: 2.9 MB      Downloading: 2.9 MB      Downloading: 2.9 MB      Downloading: 2.9 MB      Downloading: 3 MB      Downloading: 3 MB      Downloading: 3 MB      Downloading: 3 MB      Downloading: 3 MB      Downloading: 3 MB      Downloading: 3 MB      Downloading: 3 MB      Downloading: 3 MB      Downloading: 3 MB      Downloading: 3.1 MB      Downloading: 3.1 MB      Downloading: 3.1 MB      Downloading: 3.1 MB      Downloading: 3.1 MB      Downloading: 3.1 MB      Downloading: 3.2 MB      Downloading: 3.2 MB      Downloading: 3.2 MB      Downloading: 3.2 MB      Downloading: 3.2 MB      Downloading: 3.2 MB      Downloading: 3.2 MB      Downloading: 3.2 MB      Downloading: 3.3 MB      Downloading: 3.3 MB      Downloading: 3.3 MB      Downloading: 3.3 MB      Downloading: 3.4 MB      Downloading: 3.4 MB      Downloading: 3.4 MB      Downloading: 3.4 MB      Downloading: 3.4 MB      Downloading: 3.4 MB      Downloading: 3.4 MB      Downloading: 3.4 MB      Downloading: 3.5 MB      Downloading: 3.5 MB      Downloading: 3.5 MB      Downloading: 3.5 MB      Downloading: 3.5 MB      Downloading: 3.5 MB      Downloading: 3.5 MB      Downloading: 3.5 MB      Downloading: 3.6 MB      Downloading: 3.6 MB      Downloading: 3.6 MB      Downloading: 3.6 MB      Downloading: 3.6 MB      Downloading: 3.6 MB      Downloading: 3.6 MB      Downloading: 3.6 MB      Downloading: 3.7 MB      Downloading: 3.7 MB      Downloading: 3.7 MB      Downloading: 3.7 MB      Downloading: 3.7 MB      Downloading: 3.7 MB      Downloading: 3.7 MB      Downloading: 3.7 MB      Downloading: 3.8 MB      Downloading: 3.8 MB      Downloading: 3.8 MB      Downloading: 3.8 MB      Downloading: 3.8 MB      Downloading: 3.8 MB      Downloading: 3.8 MB      Downloading: 3.8 MB      Downloading: 3.9 MB      Downloading: 3.9 MB      Downloading: 4 MB      Downloading: 4 MB      Downloading: 4.1 MB      Downloading: 4.1 MB      Downloading: 4.2 MB      Downloading: 4.2 MB      Downloading: 4.3 MB      Downloading: 4.3 MB      Downloading: 4.3 MB      Downloading: 4.3 MB      Downloading: 4.3 MB      Downloading: 4.3 MB      Downloading: 4.3 MB      Downloading: 4.3 MB      Downloading: 4.3 MB      Downloading: 4.3 MB      Downloading: 4.3 MB      Downloading: 4.3 MB      Downloading: 4.3 MB      Downloading: 4.3 MB      Downloading: 4.3 MB      Downloading: 4.3 MB      Downloading: 4.4 MB      Downloading: 4.4 MB      Downloading: 4.4 MB      Downloading: 4.4 MB      Downloading: 4.4 MB      Downloading: 4.4 MB      Downloading: 4.4 MB      Downloading: 4.4 MB      Downloading: 4.5 MB      Downloading: 4.5 MB      Downloading: 4.5 MB      Downloading: 4.5 MB      Downloading: 4.5 MB      Downloading: 4.5 MB      Downloading: 4.5 MB      Downloading: 4.5 MB      Downloading: 4.6 MB      Downloading: 4.6 MB      Downloading: 4.6 MB      Downloading: 4.6 MB      Downloading: 4.6 MB      Downloading: 4.6 MB      Downloading: 4.6 MB      Downloading: 4.6 MB      Downloading: 4.6 MB      Downloading: 4.6 MB      Downloading: 4.6 MB      Downloading: 4.6 MB      Downloading: 4.6 MB      Downloading: 4.6 MB      Downloading: 4.7 MB      Downloading: 4.7 MB      Downloading: 4.7 MB      Downloading: 4.7 MB      Downloading: 4.8 MB      Downloading: 4.8 MB      Downloading: 4.8 MB      Downloading: 4.8 MB      Downloading: 4.8 MB      Downloading: 4.8 MB      Downloading: 4.9 MB      Downloading: 4.9 MB      Downloading: 5 MB      Downloading: 5 MB      Downloading: 5 MB      Downloading: 5 MB      Downloading: 5.1 MB      Downloading: 5.1 MB      Downloading: 5.2 MB      Downloading: 5.2 MB      Downloading: 5.2 MB      Downloading: 5.2 MB      Downloading: 5.2 MB      Downloading: 5.2 MB      Downloading: 5.2 MB      Downloading: 5.2 MB      Downloading: 5.3 MB      Downloading: 5.3 MB      Downloading: 5.3 MB      Downloading: 5.3 MB      Downloading: 5.4 MB      Downloading: 5.4 MB      Downloading: 5.4 MB      Downloading: 5.4 MB      Downloading: 5.4 MB      Downloading: 5.4 MB      Downloading: 5.4 MB      Downloading: 5.4 MB      Downloading: 5.4 MB      Downloading: 5.4 MB      Downloading: 5.4 MB      Downloading: 5.4 MB      Downloading: 5.4 MB      Downloading: 5.4 MB      Downloading: 5.5 MB      Downloading: 5.5 MB      Downloading: 5.5 MB      Downloading: 5.5 MB      Downloading: 5.5 MB      Downloading: 5.5 MB      Downloading: 5.5 MB      Downloading: 5.5 MB      Downloading: 5.5 MB      Downloading: 5.5 MB      Downloading: 5.5 MB      Downloading: 5.5 MB      Downloading: 5.5 MB      Downloading: 5.5 MB      Downloading: 5.5 MB      Downloading: 5.5 MB      Downloading: 5.5 MB      Downloading: 5.5 MB      Downloading: 5.6 MB      Downloading: 5.6 MB      Downloading: 5.6 MB      Downloading: 5.6 MB      Downloading: 5.6 MB      Downloading: 5.6 MB      Downloading: 5.6 MB      Downloading: 5.6 MB      Downloading: 5.6 MB      Downloading: 5.6 MB      Downloading: 5.7 MB      Downloading: 5.7 MB      Downloading: 5.7 MB      Downloading: 5.7 MB      Downloading: 5.7 MB      Downloading: 5.7 MB      Downloading: 5.7 MB      Downloading: 5.7 MB      Downloading: 5.7 MB      Downloading: 5.7 MB      Downloading: 5.7 MB      Downloading: 5.7 MB      Downloading: 5.8 MB      Downloading: 5.8 MB      Downloading: 5.8 MB      Downloading: 5.8 MB      Downloading: 5.8 MB      Downloading: 5.8 MB      Downloading: 5.8 MB      Downloading: 5.8 MB      Downloading: 5.9 MB      Downloading: 5.9 MB      Downloading: 5.9 MB      Downloading: 5.9 MB      Downloading: 5.9 MB      Downloading: 5.9 MB      Downloading: 5.9 MB      Downloading: 5.9 MB      Downloading: 5.9 MB      Downloading: 5.9 MB      Downloading: 6 MB      Downloading: 6 MB      Downloading: 6 MB      Downloading: 6 MB      Downloading: 6 MB      Downloading: 6 MB      Downloading: 6 MB      Downloading: 6 MB      Downloading: 6 MB      Downloading: 6 MB      Downloading: 6 MB      Downloading: 6 MB      Downloading: 6.1 MB      Downloading: 6.1 MB      Downloading: 6.1 MB      Downloading: 6.1 MB      Downloading: 6.1 MB      Downloading: 6.1 MB      Downloading: 6.1 MB      Downloading: 6.1 MB      Downloading: 6.1 MB      Downloading: 6.1 MB      Downloading: 6.2 MB      Downloading: 6.2 MB      Downloading: 6.2 MB      Downloading: 6.2 MB      Downloading: 6.2 MB      Downloading: 6.2 MB      Downloading: 6.2 MB      Downloading: 6.2 MB      Downloading: 6.2 MB      Downloading: 6.2 MB      Downloading: 6.2 MB      Downloading: 6.2 MB      Downloading: 6.3 MB      Downloading: 6.3 MB      Downloading: 6.3 MB      Downloading: 6.3 MB      Downloading: 6.3 MB      Downloading: 6.3 MB      Downloading: 6.3 MB      Downloading: 6.3 MB      Downloading: 6.3 MB      Downloading: 6.3 MB      Downloading: 6.3 MB      Downloading: 6.3 MB      Downloading: 6.3 MB      Downloading: 6.3 MB      Downloading: 6.4 MB      Downloading: 6.4 MB      Downloading: 6.4 MB      Downloading: 6.4 MB      Downloading: 6.4 MB      Downloading: 6.4 MB      Downloading: 6.4 MB      Downloading: 6.4 MB      Downloading: 6.5 MB      Downloading: 6.5 MB      Downloading: 6.5 MB      Downloading: 6.5 MB      Downloading: 6.5 MB      Downloading: 6.5 MB      Downloading: 6.5 MB      Downloading: 6.5 MB      Downloading: 6.5 MB      Downloading: 6.5 MB      Downloading: 6.5 MB      Downloading: 6.5 MB      Downloading: 6.6 MB      Downloading: 6.6 MB      Downloading: 6.6 MB      Downloading: 6.6 MB      Downloading: 6.6 MB      Downloading: 6.6 MB      Downloading: 6.6 MB      Downloading: 6.6 MB      Downloading: 6.6 MB      Downloading: 6.6 MB      Downloading: 6.6 MB      Downloading: 6.6 MB      Downloading: 6.6 MB      Downloading: 6.6 MB      Downloading: 6.6 MB      Downloading: 6.6 MB      Downloading: 6.6 MB      Downloading: 6.6 MB      Downloading: 6.7 MB      Downloading: 6.7 MB      Downloading: 6.7 MB      Downloading: 6.7 MB      Downloading: 6.7 MB      Downloading: 6.7 MB      Downloading: 6.7 MB      Downloading: 6.7 MB      Downloading: 6.8 MB      Downloading: 6.8 MB      Downloading: 6.8 MB      Downloading: 6.8 MB      Downloading: 6.8 MB      Downloading: 6.8 MB      Downloading: 6.9 MB      Downloading: 6.9 MB      Downloading: 6.9 MB      Downloading: 6.9 MB      Downloading: 6.9 MB      Downloading: 6.9 MB      Downloading: 6.9 MB      Downloading: 6.9 MB      Downloading: 6.9 MB      Downloading: 6.9 MB      Downloading: 6.9 MB      Downloading: 6.9 MB      Downloading: 7 MB      Downloading: 7 MB      Downloading: 7 MB      Downloading: 7 MB      Downloading: 7 MB      Downloading: 7 MB      Downloading: 7.1 MB      Downloading: 7.1 MB      Downloading: 7.1 MB      Downloading: 7.1 MB      Downloading: 7.1 MB      Downloading: 7.1 MB      Downloading: 7.1 MB      Downloading: 7.1 MB      Downloading: 7.1 MB      Downloading: 7.1 MB      Downloading: 7.2 MB      Downloading: 7.2 MB      Downloading: 7.2 MB      Downloading: 7.2 MB      #> Simple feature collection with 25607 features and 4 fields (with 21 geometries empty) #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -124.4096 ymin: 32.53444 xmax: -114.1312 ymax: 42.00948 #> Geodetic CRS:  NAD83 #> First 10 features: #>           GEOID #> 1  060210103002 #> 2  060090004006 #> 3  060470006032 #> 4  060770010004 #> 5  060770031061 #> 6  060770037003 #> 7  060470023014 #> 8  060470020021 #> 9  060390001112 #> 10 060650449283 #>                                                                 NAME #> 1          Block Group 2, Census Tract 103, Glenn County, California #> 2        Block Group 6, Census Tract 4, Calaveras County, California #> 3        Block Group 2, Census Tract 6.03, Merced County, California #> 4     Block Group 4, Census Tract 10, San Joaquin County, California #> 5  Block Group 1, Census Tract 31.06, San Joaquin County, California #> 6     Block Group 3, Census Tract 37, San Joaquin County, California #> 7       Block Group 4, Census Tract 23.01, Merced County, California #> 8       Block Group 1, Census Tract 20.02, Merced County, California #> 9        Block Group 2, Census Tract 1.11, Madera County, California #> 10  Block Group 3, Census Tract 449.28, Riverside County, California #>    populationE populationM                       geometry #> 1          792         169 MULTIPOLYGON (((-122.2498 3... #> 2          471         249 MULTIPOLYGON (((-120.6318 3... #> 3         1156         273 MULTIPOLYGON (((-120.6139 3... #> 4          886         379 MULTIPOLYGON (((-121.3687 3... #> 5         1583         276 MULTIPOLYGON (((-121.3613 3... #> 6          943         453 MULTIPOLYGON (((-121.2345 3... #> 7         3731        1208 MULTIPOLYGON (((-120.8719 3... #> 8         2740        1378 MULTIPOLYGON (((-121.2225 3... #> 9         1628         495 MULTIPOLYGON (((-119.7916 3... #> 10         498         173 MULTIPOLYGON (((-116.3563 3..."},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/RSEISearch.html","id":null,"dir":"Reference","previous_headings":"","what":"RSEISearch — RSEISearch","title":"RSEISearch — RSEISearch","text":"function allows users access EPAs' Risk-Screening Environmental Indicators (RSEI) Model database order obtain information total releases per facility per year, well associated modeled risk hazard scores. Users can search specific time periods, facilities, chemicals.","code":""},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/RSEISearch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RSEISearch — RSEISearch","text":"","code":"RSEISearch(   DownloadRSEI = TRUE,   RSEIpath = NULL,   RSEIversion = \"v2311\",   StartYr = NULL,   EndYr = NULL,   FacilityName = NULL,   Facility_ID_vec = NULL,   NAICS = NULL,   State = NULL,   County = NULL,   City = NULL,   ZipCode = NULL,   CASNumbers = NULL,   ChemicalNames = NULL,   rsei_Chem_Numbers = NULL,   returnLocation = FALSE,   projectTo = NULL,   wider = TRUE,   Filename = \"RSEIDataPull\",   SaveTo = NULL )"},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/RSEISearch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RSEISearch — RSEISearch","text":"DownloadRSEI Logical. True, function GetRSEIData called download necessary RSEI files EPA website. Defaults TRUE. RSEIpath Path specifying location RSEI csv files saved DownloadRSEI true, path specifying location existing RSEI csv files stored. RSEIversion \"v2311\" \"v2310\" specify whether RSEI data files current version (23.11) previous version (23.10). Defaults \"v2311\". Earlier versions RSEI data supported. StartYr first year RSEI data selected. EndYr last year RSEI data selected. Note final year data 2021 version 23.11 2020 version 23.10. FacilityName Character string vector character strings specifying name partial name TRI facility. Capitalization matter. Facility_ID_vec Character string vector character strings specifying TRI facility ID. NAICS 6 digit numeric string representing North American Industry Classification System (NAICS) code, vector NAICS codes. Numbers provided NAICS argument matched found column \"Modeled NAICS\". According RSEI data dictionary, facility can report multiple NAICS codes. one primary NAICS reported facility, frequently reported primary NAICS recent year selected column \"NAICS1\", \"Modeled NAICS\" column based NAICS1 modified based additional information necessary. State character string vector character strings representing 2 letter state territory codes. County Character string vector character strings specifying name partial name county. Capitalization matter. City Character string vector character strings specifying name partial name city. Capitalization matter. ZipCode 5 digit numeric string, vector 5 digit numeric strings, representing zip codes. CASNumbers numerical string vector numerical strings representing CAS Number. CAS Registry Number numeric identifier can contain 10 digits, separated hyphens. However hyphens, dashes, spaces allowed, please collapse standard CAS number format digital string. ChemicalNames Character string vector character strings specifying name partial name chemical. Capitalization matter. rsei_Chem_Numbers number representing unique idenifyer RSEI Chemicals table. Chemical Numbers range 1 almost 900 time. returnLocation Logical. true returns spatial dataframe (sf object) location TRI facilities, including street address latitude/longitude. .csv file Rdata object also saved working directory.  Defaults FALSE. projectTo 4 digit numeric string specifying EPSG coordinate system. included, Lat/Long facility location projected provided coordinate system dataframe containing TRI location information created returnLocation true. wider Logical. true, data pivoted chemical-facility pair, information releases associated hazard scores per year wide format columns year. false, information releases/hazards per year long format, one row facility-chemical-year combination. Defaults TRUE. Filename Optional character string specifying name saved output file. File name appended current date. supplied defaults \"RSEIDataPull\". SaveTo Optional path final RSEI datafiles saved. NULL, output saved.","code":""},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/RSEISearch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"RSEISearch — RSEISearch","text":"function returns dataframe containing summed chemical releases per facility per year, well associated risk/hazard scores releases, based search criteria provided. Information chemical facility also included dataframe. also option return second dataframe contains location information facilities returned search use spatial operations. sf object contains point geometry facilities along names, facility IDs, addresses, projected desired coordinate system.","code":""},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/RSEISearch.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"RSEISearch — RSEISearch","text":"RSEI database includes data federally managed Toxic Release Inventory (TRI) program 25,000 facilities reporting hazardous emissions since 1980s, well risk scores account size chemical release, fate transport chemical environment, size location exposed population, chemical's toxicity. aggregated version data available download RSEI website. data spread different tables, crosswalks link facilities chemicals emmissions data release level. function allows users either read tables already downloaded, download necessary files, knits tables together filters based search criteria provided function. search criteria allow users narrow vast tables specific years, chemicals, facility locations types. function uses function GetRSEIData download unzip five csv files (Facility, Chemical, Submission, Releases, Elements) necessary calculate summed releases per facility per year chemical. Users can also point function csv files saved. function requires files names downloaded .","code":""},{"path":"https://sarahvalencia.github.io/AerialApportionment/reference/RSEISearch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"RSEISearch — RSEISearch","text":"","code":"#Download RSEI tables and find yearly releases for all chemicals released by the Ritepack Inc.  RitePack <- RSEISearch(DownloadRSEI = TRUE, RSEIversion=\"v2310\",  FacilityName = NULL, Facility_ID_vec = \"66024KMGBR52S15\",  Filename = \"RSEITest4\", wider = FALSE) #> Warning: URL 'https://gaftp.epa.gov/rsei/Older_Versions/Version2310_RY2020/Public_Release_Data/RSEIv2310_Public_Release_Data.zip': status was 'SSL peer certificate or SSH remote key was not OK' #> Error in download.file(\"https://gaftp.epa.gov/rsei/Older_Versions/Version2310_RY2020/Public_Release_Data/RSEIv2310_Public_Release_Data.zip\",     temp, quiet = FALSE): cannot open URL 'https://gaftp.epa.gov/rsei/Older_Versions/Version2310_RY2020/Public_Release_Data/RSEIv2310_Public_Release_Data.zip'"}]
